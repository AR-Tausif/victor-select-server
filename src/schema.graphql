# import * from './generated/prisma.graphql'

directive @isAuthenticated on QUERY | FIELD_DEFINITION | MUTATION
directive @hasRole(roles: [String]) on QUERY | FIELD_DEFINITION | MUTATION
directive @isOwner(type: String) on QUERY | FIELD_DEFINITION | MUTATION
directive @isOwnerOrHasRole(type: String, roles: [String]) on QUERY | MUTATION

type SuccessMessage {
  message: String
}

type Mutation {
  login(email: String!, password: String!): User
  register(
    email: String!
    password: String!
    firstName: String!
    lastName: String!
  ): SuccessMessage!
  requestReset(email: String!): SuccessMessage!
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  logout: Boolean!
  invalidateTokens: Boolean!
  createQuestionnaire(details: Json!): Questionnaire
  createAuthnetCustomer(
    address: String!
    city: String!
    state: String!
    zipCode: String!
    telephone: String!
  ): Boolean!
}

type Query {
  me: User @isAuthenticated
  users: [User]!
  userExists(email: String!): Boolean!
  getAuthnetCustomer(id: String!): AuthnetCustomer
  hello: SuccessMessage
  validZipCode(zipcode: String!): Boolean!
  questionnaires: [Questionnaire]!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  count: Int
  role: Role
  authnetCustomerId: String
  resetToken: String
  resetTokenExpiry: Float
}

type Questionnaire {
  id: ID!
  user: User!
  details: Json!
}

type AuthnetCustomer {
  id: String!
  firstName: String!
}
