# import * from './generated/prisma.graphql'

directive @isAuthenticated on QUERY | FIELD_DEFINITION | MUTATION
directive @hasRole(roles: [String]) on QUERY | FIELD_DEFINITION | MUTATION
directive @isOwner(type: String) on QUERY | FIELD_DEFINITION | MUTATION
directive @isOwnerOrHasRole(type: String, roles: [String]) on QUERY | MUTATION

input SaveCardInput {
  cardNumber: String!
  expiration: String!
  cvv: String!
  firstName: String
  lastName: String
  address: String
  zipcode: String
}

input SaveAddressInput {
  addressOne: String!
  addressTwo: String
  city: String!
  state: String!
  zipcode: String!
  telephone: String
}

input SaveVisitInput {
  type: PlanType
  questionnaire: Json!
}

input RegisterInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

type SuccessMessage {
  message: String
}

type Mutation {
  login(email: String!, password: String!): User
  register(input: RegisterInput!): SuccessMessage!
  requestReset(email: String!): SuccessMessage!
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  logout: Boolean!
  invalidateTokens: Boolean!
  saveCard(input: SaveCardInput!): CreditCard!
  saveAddress(input: SaveAddressInput!): Address!
  saveTmpVisit(input: SaveVisitInput!): Visit!
}

type Query {
  me: User @isAuthenticated
  user(id: String!): User
  users: [User]!
  creditCards: [CreditCard]!
  userExists(email: String!): Boolean!
  hello: SuccessMessage
  validZipCode(zipcode: String!): Boolean!
  Visit(id: String!): Visit
  visits: [Visit]!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  count: Int
  role: Role
  addresses: [Address]!
  creditCards: [CreditCard]!
  visits: [Visit]!
  resetToken: String
  resetTokenExpiry: Float
}

# type CreditCard {
#   id: ID!
#   user: User!
#   ccToken: String!
#   ccType: String!
#   ccNumber: String!
#   ccExpire: String!
# }

# type Address {
#   id: ID!
#   user: User!
#   addressOne: String!
#   addressTwo: String
#   city: String!
#   state: String!
#   zipcode: String!
#   telephone: String
#   updatedAt: DateTime! @updatedAt
#   createdAt: DateTime! @createdAt
# }

# type Visit {
#   id: ID!
#   user: User!
#   type: PlanType!
#   questionnaire: Json!
#   status: VisitStatus!
# }
