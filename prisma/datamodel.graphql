enum Role {
  ADMIN
  PATIENT
  PHYSICIAN
  VISITOR
}

enum VisitStatus {
  PENDING
  APPROVED
  DENIED
  TEMPORARY
}

enum PrescriptionStatus {
  PENDING
  DENIED
  ACTIVE
  CLOSED
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  PAYMENT_DECLINED
}

enum PrescriptionType {
  ED
  HAIR
  SLEEP
  JOY
  ALLERGY
  WEIGHT
}

type User {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  role: Role @default(value: VISITOR)
  firstName: String!
  lastName: String!
  password: String!
  email: String! @unique
  addresses: [Address]!
  creditCards: [CreditCard]!
  photoId: String
  gender: String
  birthDate: DateTime
  prescriptions: [Prescription]!
  visits: [Visit]!
  currVisit: Json
  resetToken: String
  resetTokenExpiry: Float
  tokenVersion: Int @default(value: 0)
}

type Visit {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  user: User
  type: PrescriptionType! @default(value: ED)
  questionnaire: Json!
}

type Address {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  user: User!
  active: Boolean! @default(value: false)
  addressOne: String!
  addressTwo: String
  city: String!
  state: String!
  zipcode: String!
  telephone: String!
  shippoId: String! @default(value: "")
}

type Product @pgTable(name: "product") {
  id: ID! @id
  productId: String! @unique
  type: PrescriptionType!
  category: String!
  productName: String!
  display: String!
  default: Boolean! @default(value: false)
  doseDisplay: String
  pillsPerDose: Int! @default(value: 1)
  subTitle: String
  monthlyPrice: Int!
  twoMonthPrice: Int!
  threeMonthPrice: Int!
  directions: String
}

type Prescription {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  status: PrescriptionStatus! @default(value: PENDING)
  creditcard: CreditCard
  refnum: String
  user: User!
  visit: Visit!
  type: PrescriptionType!
  product: Product! @relation(name: "ProductById")
  timesPerMonth: Int!
  addon: Product @relation(name: "AddonById")
  addonTimesPerMonth: Int
  approvedDate: DateTime
  startDate: DateTime
  expireDate: DateTime
  totalRefills: Int!
  refillsRemaining: Int!
  nextDelivery: DateTime
  shippingInterval: Int!
  amountDue: Int!
  orders: [Order]!
}

type Order {
  id: ID! @id
  status: OrderStatus! @default(value: PENDING)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  user: User!
  address: Address!
  prescription: Prescription!
  shipDate: DateTime
  trackingNumber: String
  creditCard: CreditCard
  new: Boolean! @default(value: false)
  refills: Int!
  amount: Int!
  refnum: String!
}

type CreditCard {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  active: Boolean! @default(value: false)
  user: User!
  ccToken: String!
  ccType: String!
  ccNumber: String!
  ccExpire: String!
}

type Message {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  prescription: Prescription!
  private: Boolean! @default(value: true)
  read: Boolean! @default(value: false)
  physician: User @relation(name: "MessagePhysician")
  user: User! @relation(name: "MessageUser")
  text: String!
}
